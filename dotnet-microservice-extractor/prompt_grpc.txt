
  You are a seasoned .NET Architect and microservices expert tasked with transforming a legacy ASP.NET Web Forms project into a modern, domain-driven microservice architecture using gRPC and ADO.NET. The goal is to identify natural service boundaries from the source code structure and dependencies, and design a target architecture that resolves common pitfalls.
  Each microservice should be composed of multiple projects/layers such as Domain, Application, Infrastructure, and Presentation. Use ADO.NET (MySqlConnection, MySqlCommand, MySqlDataReader) with manual MySQL queries for data access instead of Entity Framework.
   ### Important Notes:
    - The legacy project uses ASP.NET Web Forms (.aspx, .aspx.cs), SOAP services (.asmx), and user controls (.ascx). DO NOT map .asmx, .ascx, or .aspx.cs files to .proto or grpc_service_cs files. Instead, derive gRPC services from entity and repository files (e.g., HelloASP.Data/Entity/Product.cs, HelloASP.Data/Repository/ProductRepository.cs).
    - For the 'customerGrpc' microservice, infer Customer entity from HelloASP/Customers/Default.aspx.cs if no Customer.cs exists, creating a Customer.cs with properties inferred from the input file. Use the same properties in CustomerDto.cs and CustomerDataAccess.cs to ensure consistency.
    - For files without source_files (e.g., appsettings.json, Program.cs), use provided descriptions, instructions, or default templates.
    - Include detailed 'instructions' in the target_structure to guide code generation.
    - Include a 'webUI' microservice with MVC structure (Controllers, Views, Models) to interact with gRPC services via clients.
    - Use ADO.NET with `MySQLConnector` (e.g., `MySQLConnection`, `MySQLCommand`, `MySQLDataReader`) and inline MySQL queries for data access. Retrieve connection strings from `appsettings.json` using `Configuration.GetConnectionString("DefaultConnection")`.
  ### Requirements:
  - **Mandatory Onion Architecture**:
    * Domain: Entities (e.g., Product.cs), Repositories (e.g., IProductRepository.cs).
    * Application: DTOs, Interfaces, Services.
    * Infrastructure: Data (e.g., ProductDataAccess.cs with MySQL queries using MySQLConnection), Repositories (e.g., ProductRepository.cs calling ProductDataAccess.cs).
    * Presentation: Protos (.proto files), Services (gRPC implementations), appsettings.json (with MySQL connection string), Program.cs, .csproj.
  - **gRPC Specifics**:
    * Generate .proto files from entities and repositories, defining RPCs for CRUD operations (e.g., GetProduct, ListProducts).
    * Service implementations (e.g., ProductGrpcService.cs) should use async methods and inherit from generated service base classes.
    * Example: For Product.cs with Id, Name, Description, create product.proto with ProductService (GetProduct, ListProducts) and messages (ProductRequest, ProductResponse).
  - **Gateway**:
    * Include appsettings.json (with MySQL connection string if auth_enabled), Gateway.csproj (include MySQLConnector if auth_enabled), Program.cs, gateway.sln.
    * Include Controllers folder with controller files for each microservice (e.g., productGrpcController.cs, cartGrpcController.cs) to handle HTTP requests and route to gRPC services.
    * Include Protos folder with .proto files for each microservice (e.g., productgrpc.proto, cartgrpc.proto) to define client-side gRPC service definitions.
    * Configure Program.cs to set up gRPC clients and HTTP endpoints for routing, remove EF middleware.
  - **WebUI**:
    * Include MVC structure: Controllers (e.g., ProductController.cs), Views (e.g., Product/Index.cshtml), Models.
    * Include gRPC clients (e.g., ProductGrpcClient.cs) derived from .proto files.
    * Include launchSettings.json.
  - **Transformation Rules**:
    * Derive .proto files from entity/repository files (e.g., Product.cs, ProductRepository.cs).
    * Map .aspx.cs business logic to Application layer services (e.g., ProductService.cs) if relevant.
    * Convert Web.config settings to appsettings.json with MySQL connection strings.
    * For webUI, convert .aspx to Razor views and .aspx.cs to MVC controllers using gRPC clients.
  ### Input Details:
  1. **Analyzed Legacy Structure**:  
  {
  "Userservice/Application/IUserService.cs/file_type": "service",
  "Userservice/Application/IUserService.cs/description": "This file defines an interface for a user service in a WCF Onion architecture. It specifies the contract for operations related to user management, including retrieving, inserting, updating, and deleting user data.",
  "Userservice/Application/IUserService.cs/classnames": [
    "IUserService"
  ],
  "Userservice/Application/IUserService.cs/namespace": [
    "WCFOnionService.Application"
  ],
  "Userservice/Application/IUserService.cs/methods": [
    "GetAllUsers",
    "GetUserById",
    "InsertUser",
    "UpdateUser",
    "DeleteUser"
  ],
  "Userservice/Application/IUserService.cs/external_references": [
    "System.Collections.Generic",
    "WCFOnionService.Infrastructure"
  ],
  "Userservice/Application/IUserService.cs/framework_features": [],
  "Userservice/Application/IUserService.cs/dependencies": [
    "UserDTO"
  ],
  "Userservice/Application/IUserService.cs/patterns_used": [
    "Repository Pattern"
  ],
  "Userservice/Application/IUserService.cs/routes": null,
  "Userservice/Application/IUserService.cs/extra_notes": "This interface is part of the application layer in an Onion architecture, focusing on defining service contracts without implementation details.",
  "Userservice/Application/UserService.cs/file_type": "service",
  "Userservice/Application/UserService.cs/description": "This file defines a service class named UserService that implements the IUserService interface. It provides methods to perform CRUD operations on User entities by interacting with a user repository.",
  "Userservice/Application/UserService.cs/classnames": [
    "UserService"
  ],
  "Userservice/Application/UserService.cs/namespace": [
    "WCFOnionService.Application"
  ],
  "Userservice/Application/UserService.cs/methods": [
    "GetAllUsers",
    "GetUserById",
    "InsertUser",
    "UpdateUser",
    "DeleteUser",
    "MapToDTO",
    "MapToEntity"
  ],
  "Userservice/Application/UserService.cs/external_references": [
    "System.Collections.Generic",
    "System.Linq",
    "WCFOnionService.Domain",
    "WCFOnionService.Infrastructure"
  ],
  "Userservice/Application/UserService.cs/framework_features": [],
  "Userservice/Application/UserService.cs/dependencies": [
    "IUserRepository",
    "UserDTO",
    "User"
  ],
  "Userservice/Application/UserService.cs/patterns_used": [
    "Repository Pattern",
    "Dependency Injection"
  ],
  "Userservice/Application/UserService.cs/routes": null,
  "Userservice/Application/UserService.cs/extra_notes": "The service uses a repository to abstract data access and performs mapping between domain entities and DTOs.",
  "Userservice/Domain/IUserRepository.cs/file_type": "repository",
  "Userservice/Domain/IUserRepository.cs/description": "This file defines an interface for a user repository, specifying the contract for user-related data operations such as retrieving, inserting, updating, and deleting user records.",
  "Userservice/Domain/IUserRepository.cs/classnames": [
    "IUserRepository"
  ],
  "Userservice/Domain/IUserRepository.cs/namespace": [
    "WCFOnionService.Domain"
  ],
  "Userservice/Domain/IUserRepository.cs/methods": [
    "List<User> GetAll()",
    "User GetById(int id)",
    "bool Insert(User user)",
    "void Update(User user)",
    "void Delete(int id)"
  ],
  "Userservice/Domain/IUserRepository.cs/external_references": [
    "System.Collections.Generic"
  ],
  "Userservice/Domain/IUserRepository.cs/framework_features": [],
  "Userservice/Domain/IUserRepository.cs/dependencies": [],
  "Userservice/Domain/IUserRepository.cs/patterns_used": [
    "Repository"
  ],
  "Userservice/Domain/IUserRepository.cs/routes": null,
  "Userservice/Domain/IUserRepository.cs/extra_notes": null,
  "Userservice/Domain/User.cs/file_type": "model",
  "Userservice/Domain/User.cs/description": "This file defines a User model class representing a user entity with properties such as Id, FirstName, LastName, Username, Password, and EnrollmentDate. It is used to encapsulate user-related data within the application.",
  "Userservice/Domain/User.cs/classnames": [
    "User"
  ],
  "Userservice/Domain/User.cs/namespace": [
    "WCFOnionService.Domain"
  ],
  "Userservice/Domain/User.cs/methods": [],
  "Userservice/Domain/User.cs/external_references": [
    "System"
  ],
  "Userservice/Domain/User.cs/framework_features": [],
  "Userservice/Domain/User.cs/dependencies": [],
  "Userservice/Domain/User.cs/patterns_used": [],
  "Userservice/Domain/User.cs/routes": null,
  "Userservice/Domain/User.cs/extra_notes": null,
  "Userservice/Infrastructure/DBContext.cs/file_type": "repository",
  "Userservice/Infrastructure/DBContext.cs/description": "This file defines a database context for Entity Framework Core, specifically configured to use a MySQL database. It is part of the infrastructure layer of the application and manages the database operations related to the 'User' entity.",
  "Userservice/Infrastructure/DBContext.cs/classnames": [
    "DBContext"
  ],
  "Userservice/Infrastructure/DBContext.cs/namespace": [
    "WCFOnionService.Infrastructure"
  ],
  "Userservice/Infrastructure/DBContext.cs/methods": [
    "OnConfiguring(DbContextOptionsBuilder optionsBuilder)"
  ],
  "Userservice/Infrastructure/DBContext.cs/external_references": [
    "Microsoft.EntityFrameworkCore",
    "WCFOnionService.Domain"
  ],
  "Userservice/Infrastructure/DBContext.cs/framework_features": [
    "DbContext",
    "DbSet",
    "OnConfiguring",
    "UseMySQL"
  ],
  "Userservice/Infrastructure/DBContext.cs/dependencies": [
    "Microsoft.EntityFrameworkCore",
    "MySQL.Data.EntityFrameworkCore"
  ],
  "Userservice/Infrastructure/DBContext.cs/patterns_used": [
    "Repository"
  ],
  "Userservice/Infrastructure/DBContext.cs/routes": null,
  "Userservice/Infrastructure/DBContext.cs/extra_notes": "The code uses a MySQL database connection string, which should be replaced with actual credentials for production use.",
  "Userservice/Infrastructure/UserDTO.cs/file_type": "model",
  "Userservice/Infrastructure/UserDTO.cs/description": "This file defines a Data Transfer Object (DTO) for a user, which is used to transfer data between processes. It contains properties that represent user information, such as ID, first name, last name, username, password, and enrollment date.",
  "Userservice/Infrastructure/UserDTO.cs/classnames": [
    "UserDTO"
  ],
  "Userservice/Infrastructure/UserDTO.cs/namespace": [
    "WCFOnionService.Infrastructure"
  ],
  "Userservice/Infrastructure/UserDTO.cs/methods": [],
  "Userservice/Infrastructure/UserDTO.cs/external_references": [
    "System"
  ],
  "Userservice/Infrastructure/UserDTO.cs/framework_features": [],
  "Userservice/Infrastructure/UserDTO.cs/dependencies": [],
  "Userservice/Infrastructure/UserDTO.cs/patterns_used": [
    "Data Transfer Object (DTO)"
  ],
  "Userservice/Infrastructure/UserDTO.cs/routes": null,
  "Userservice/Infrastructure/UserDTO.cs/extra_notes": null,
  "Userservice/Infrastructure/UserRepository.cs/file_type": "repository",
  "Userservice/Infrastructure/UserRepository.cs/description": "This file defines a repository class for managing User entities in a database. It provides methods for CRUD operations using Entity Framework.",
  "Userservice/Infrastructure/UserRepository.cs/classnames": [
    "UserRepository"
  ],
  "Userservice/Infrastructure/UserRepository.cs/namespace": [
    "WCFOnionService.Infrastructure"
  ],
  "Userservice/Infrastructure/UserRepository.cs/methods": [
    "GetAll",
    "GetById",
    "Insert",
    "Update",
    "Delete"
  ],
  "Userservice/Infrastructure/UserRepository.cs/external_references": [
    "System.Collections.Generic",
    "System.Linq",
    "WCFOnionService.Domain"
  ],
  "Userservice/Infrastructure/UserRepository.cs/framework_features": [
    "Entity Framework"
  ],
  "Userservice/Infrastructure/UserRepository.cs/dependencies": [
    "DBContext",
    "User",
    "IUserRepository"
  ],
  "Userservice/Infrastructure/UserRepository.cs/patterns_used": [
    "Repository"
  ],
  "Userservice/Infrastructure/UserRepository.cs/routes": null,
  "Userservice/Infrastructure/UserRepository.cs/extra_notes": null,
  "Userservice/Presentation/IService.cs/file_type": "service",
  "Userservice/Presentation/IService.cs/description": "This file defines a WCF service contract interface for managing user data. It specifies the operations available for interacting with user data, such as retrieving all users, getting a user by ID, inserting, updating, and deleting users. The service is designed to handle HTTP requests and responses in JSON format.",
  "Userservice/Presentation/IService.cs/classnames": [
    "IService"
  ],
  "Userservice/Presentation/IService.cs/namespace": [
    "WCFOnionService.Presentation"
  ],
  "Userservice/Presentation/IService.cs/methods": [
    "List<UserDTO> Get()",
    "UserDTO GetUserById(string id)",
    "bool InsertUser(UserDTO user)",
    "void UpdateUser(UserDTO user)",
    "void DeleteUser(string id)"
  ],
  "Userservice/Presentation/IService.cs/external_references": [
    "System.Collections.Generic",
    "System.ServiceModel",
    "System.ServiceModel.Web",
    "WCFOnionService.Infrastructure"
  ],
  "Userservice/Presentation/IService.cs/framework_features": [
    "WCF",
    "ServiceContract",
    "OperationContract",
    "WebGet",
    "WebInvoke"
  ],
  "Userservice/Presentation/IService.cs/dependencies": [
    "UserDTO"
  ],
  "Userservice/Presentation/IService.cs/patterns_used": [
    "Service Contract"
  ],
  "Userservice/Presentation/IService.cs/routes": [
    "users",
    "users/{id}",
    "users",
    "users",
    "users/{id}"
  ],
  "Userservice/Presentation/IService.cs/extra_notes": null,
  "Userservice/Presentation/Service.svc.cs/file_type": "service",
  "Userservice/Presentation/Service.svc.cs/description": "This file defines a service class that implements the IService interface, providing methods to interact with user data through a user service. It acts as a bridge between the presentation layer and the application layer, utilizing a user service to perform CRUD operations on user data.",
  "Userservice/Presentation/Service.svc.cs/classnames": [
    "Service"
  ],
  "Userservice/Presentation/Service.svc.cs/namespace": [
    "WCFOnionService.Presentation"
  ],
  "Userservice/Presentation/Service.svc.cs/methods": [
    "Get",
    "GetUserById",
    "InsertUser",
    "UpdateUser",
    "DeleteUser"
  ],
  "Userservice/Presentation/Service.svc.cs/external_references": [
    "System.Collections.Generic",
    "WCFOnionService.Application",
    "WCFOnionService.Infrastructure"
  ],
  "Userservice/Presentation/Service.svc.cs/framework_features": [],
  "Userservice/Presentation/Service.svc.cs/dependencies": [
    "IUserService",
    "DBContext",
    "UserRepository",
    "UserService",
    "UserDTO"
  ],
  "Userservice/Presentation/Service.svc.cs/patterns_used": [
    "Dependency Injection"
  ],
  "Userservice/Presentation/Service.svc.cs/routes": null,
  "Userservice/Presentation/Service.svc.cs/extra_notes": null,
  "Userservice/Presentation/Properties/AssemblyInfo.cs/file_type": "config",
  "Userservice/Presentation/Properties/AssemblyInfo.cs/description": "This file is an AssemblyInfo file used for defining metadata about the assembly such as title, description, version, and other attributes. It is typically used in .NET projects to provide information about the assembly to the runtime and other tools.",
  "Userservice/Presentation/Properties/AssemblyInfo.cs/classnames": [],
  "Userservice/Presentation/Properties/AssemblyInfo.cs/namespace": [],
  "Userservice/Presentation/Properties/AssemblyInfo.cs/methods": [],
  "Userservice/Presentation/Properties/AssemblyInfo.cs/external_references": [
    "System.Reflection",
    "System.Runtime.InteropServices"
  ],
  "Userservice/Presentation/Properties/AssemblyInfo.cs/framework_features": [
    "Assembly attributes"
  ],
  "Userservice/Presentation/Properties/AssemblyInfo.cs/dependencies": [],
  "Userservice/Presentation/Properties/AssemblyInfo.cs/patterns_used": [],
  "Userservice/Presentation/Properties/AssemblyInfo.cs/routes": null,
  "Userservice/Presentation/Properties/AssemblyInfo.cs/extra_notes": "This file does not contain any class or method definitions. It is purely for assembly metadata configuration."
}
  2. **Target .NET Version**: net8.0
  3. **Microservice Architecture**:
    - Split into microservices: userGrpc.
    - ALWAYS include 'Gateway' for Ocelot routing and 'webUI' for MVC UI.
    - Handle authentication:
  
  - No authentication is detected in the source repository.
  - DO NOT include authentication in any microservice.
  - The Gateway microservice MUST act as a gRPC client, routing HTTP requests to gRPC microservices using controllers and .proto files.
  
  ### Output Schema:
  {
    "microservices": [
      {
        "name": "string",
        "projects": [
          {
            "project_name": "string",
            "target_structure": {
              "root": {
                "file_name": {
                  "source_files": ["string"],
                  "file_type": "config|model|repository|service|program_cs_grpc|csproj_grpc|proto|grpc_service_cs|controller|view|data_access",
                  "description": "string",
                  "namespace": "string"
                }
              },
              "folders": {
                "Entities": {
                  "target_files": {
                    "EntityName.cs": {
                      "source_files": ["legacy/EntityName.cs"],
                      "file_type": "model",
                      "description": "Entity description",
                      "namespace": "Microservice.Domain.Entities"
                    }
                  }
                },
                "Data": {
                  "target_files": {
                    "DataAccessName.cs": {
                      "source_files": ["legacy/EntityName.cs"],
                      "file_type": "data_access",
                      "description": "ADO.NET data access with SQL queries matching entity properties",
                      "namespace": "Microservice.Infrastructure.Data"
                    }
                  }
                },
                "Protos": {
                  "target_files": {
                    "[ServiceName].proto": {
                      "source_files": ["legacy/EntityName.cs", "legacy/RepositoryName.cs"],
                      "file_type": "proto",
                      "description": "gRPC service definition",
                      "namespace": ""
                    }
                  }
                }
              }
            }
          }
        ]
      }
    ]
  }
  ### Example:(***only for reference, do not generate this as the target structure, taking this as reference generate the target structure according to the input dynamically.***)
  {
    "microservices": [
      {
        "name": "customerGrpc",
        "projects": [
          {
            "project_name": "CustomerGrpc.Domain",
            "target_structure": {
              "root": {
                "CustomerGrpc.Domain.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Domain project file for Customer microservice",
                  "namespace": "CustomerGrpc.Domain"
                }
              },
              "folders": {
                "Entities": {
                  "target_files": {
                    "Customer.cs": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "model",
                      "description": "Customer entity inferred from UI logic",
                      "namespace": "CustomerGrpc.Domain.Entities"
                    }
                  },
                  "subfolders": {}
                },
                "Repositories": {
                  "target_files": {
                    "ICustomerRepository.cs": {
                      "source_files": [],
                      "file_type": "interface",
                      "description": "Interface for Customer repository",
                      "namespace": "CustomerGrpc.Domain.Repositories"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          },
          {
            "project_name": "CustomerGrpc.Application",
            "target_structure": {
              "root": {
                "CustomerGrpc.Application.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Application project file for Customer microservice",
                  "namespace": "CustomerGrpc.Application"
                }
              },
              "folders": {
                "DTOs": {
                  "target_files": {
                    "CustomerDto.cs": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "dto",
                      "description": "DTO for Customer entity",
                      "namespace": "CustomerGrpc.Application.DTOs"
                    }
                  },
                  "subfolders": {}
                },
                "Interfaces": {
                  "target_files": {
                    "ICustomerService.cs": {
                      "source_files": [],
                      "file_type": "interface",
                      "description": "Interface for Customer service",
                      "namespace": "CustomerGrpc.Application.Interfaces"
                    }
                  },
                  "subfolders": {}
                },
                "Services": {
                  "target_files": {
                    "CustomerService.cs": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "service",
                      "description": "Implementation of Customer service",
                      "namespace": "CustomerGrpc.Application.Services"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          },
          {
            "project_name": "CustomerGrpc.Infrastructure",
            "target_structure": {
              "root": {
                "CustomerGrpc.Infrastructure.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Infrastructure project file for Customer microservice, includes MySQLConnector",
                  "namespace": "CustomerGrpc.Infrastructure",
                  "instructions": "Target net8.0; include MySQLConnector for ADO.NET; reference Domain and Application projects"
                }
              },
              "folders": {
                "Data": {
                  "target_files": {
                    "CustomerDataAccess.cs": {
                      "source_files": [],
                      "file_type": "data_access",
                      "description": "ADO.NET data access for Customer with MySQL queries using MySqlConnection, MySqlCommand, MySqlDataReader",
                      "namespace": "CustomerGrpc.Infrastructure.Data",
                      "instructions": "Implement async CRUD methods (GetCustomer, ListCustomers) using MySQLConnection and parameterized MySQL queries"
                    }
                  },
                  "subfolders": {}
                },
                "Repositories": {
                  "target_files": {
                    "CustomerRepository.cs": {
                      "source_files": [],
                      "file_type": "repository",
                      "description": "Implementation of Customer repository calling CustomerDataAccess.cs",
                      "namespace": "CustomerGrpc.Infrastructure.Repositories"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          },
          {
            "project_name": "CustomerGrpc.Presentation",
            "target_structure": {
              "root": {
                "appsettings.json": {
                  "source_files": ["HelloASP/Web.config"],
                  "file_type": "config",
                  "description": "Configuration for Customer gRPC service with MySQL connection string"
                },
                "CustomerGrpc.Presentation.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Presentation project file for Customer microservice",
                  "namespace": "CustomerGrpc.Presentation"
                },
                "Program.cs": {
                  "source_files": [],
                  "file_type": "program_cs_grpc",
                  "description": "Entry point for the Customer gRPC service, no EF middleware"
                }
              },
              "folders": {
                "Protos": {
                  "target_files": {
                    "customergrpc.proto": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "proto",
                      "description": "gRPC service definition for Customer",
                      "namespace": ""
                    }
                  },
                  "subfolders": {}
                },
                "Services": {
                  "target_files": {
                    "CustomerGrpcService.cs": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "grpc_service_cs",
                      "description": "gRPC service implementation for Customer",
                      "namespace": "CustomerGrpc.Presentation.Services"
                    }
                  },
                  "subfolders": {}
                },
                "Properties": {
                  "target_files": {
                    "launchSettings.json": {
                      "source_files": [],
                      "file_type": "config",
                      "description": "Launch settings for the Customer gRPC service"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          }
        ]
      },
      {
        "name": "gateway",
        "projects": [
          {
            "project_name": "Gateway",
            "target_structure": {
              "root": {
                "appsettings.json": {
                  "source_files": ["HelloASP/Web.config"],
                  "file_type": "config",
                  "description": "Configuration settings for Gateway with MySQL connection string if auth_enabled"
                },
                "Gateway.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Gateway project file, includes MySQLConnector if auth_enabled",
                  "instructions": "Target net8.0; include Grpc.Net.Client, Grpc.Net.ClientFactory, Microsoft.AspNetCore.Mvc, Microsoft.Extensions.Logging, and MySQLConnector if auth_enabled"
                },
                "Program.cs": {
                  "source_files": [],
                  "file_type": "program_cs_grpc",
                  "description": "Entry point for the Gateway application, no EF middleware"
                },
                "gateway.sln": {
                  "source_files": [],
                  "file_type": "sln",
                  "description": "Solution file for Gateway microservice"
                }
              },
              "folders": {
                "Entity": {
                  "target_files": {
                    "User.cs": {
                      "source_files": [],
                      "file_type": "model",
                      "description": "User entity for authentication",
                      "namespace": "Gateway.Entity"
                    }
                  },
                  "subfolders": {}
                },
                "Data": {
                  "target_files": {
                    "AuthDataAccess.cs": {
                      "source_files": [],
                      "file_type": "data_access",
                      "description": "ADO.NET data access for authentication with MySQL queries",
                      "namespace": "Gateway.Data",
                      "instructions": "Implement async methods for user authentication using MySqlConnection, MySqlCommand, MySqlDataReader"
                    }
                  },
                  "subfolders": {}
                },
                "Protos": {
                  "target_files": {
                    "customergrpc.proto": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "proto",
                      "description": "gRPC service definition for Customer",
                      "namespace": ""
                    },
                    "productgrpc.proto": {
                      "source_files": ["HelloASP.Data/Entity/Product.cs"],
                      "file_type": "proto",
                      "description": "gRPC service definition for Product",
                      "namespace": ""
                    }
                  },
                  "subfolders": {}
                },
                "Controllers": {
                  "target_files": {
                    "CustomerGrpcController.cs": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "controller",
                      "description": "Controller for Customer gRPC routing",
                      "namespace": "Gateway.Controllers"
                    },
                    "ProductGrpcController.cs": {
                      "source_files": ["HelloASP/Product/ProductList.aspx.cs"],
                      "file_type": "controller",
                      "description": "Controller for Product gRPC routing",
                      "namespace": "Gateway.Controllers"
                    }
                  },
                  "subfolders": {}
                },
                "Properties": {
                  "target_files": {
                    "launchSettings.json": {
                      "source_files": [],
                      "file_type": "config"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          }
        ]
      },
      {
        "name": "productGrpc",
        "projects": [
          {
            "project_name": "ProductGrpc.Domain",
            "target_structure": {
              "root": {
                "ProductGrpc.Domain.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Domain project file for Product microservice",
                  "namespace": "ProductGrpc.Domain"
                }
              },
              "folders": {
                "Entities": {
                  "target_files": {
                    "Product.cs": {
                      "source_files": ["HelloASP.Data/Entity/Product.cs"],
                      "file_type": "model",
                      "description": "Product entity",
                      "namespace": "ProductGrpc.Domain.Entities"
                    }
                  },
                  "subfolders": {}
                },
                "Repositories": {
                  "target_files": {
                    "IProductRepository.cs": {
                      "source_files": [],
                      "file_type": "interface",
                      "description": "Interface for Product repository",
                      "namespace": "ProductGrpc.Domain.Repositories"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          },
          {
            "project_name": "ProductGrpc.Application",
            "target_structure": {
              "root": {
                "ProductGrpc.Application.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Application project file for Product microservice",
                  "namespace": "ProductGrpc.Application"
                }
              },
              "folders": {
                "DTOs": {
                  "target_files": {
                    "ProductDto.cs": {
                      "source_files": ["HelloASP.Data/Entity/Product.cs"],
                      "file_type": "dto",
                      "description": "DTO for Product entity",
                      "namespace": "ProductGrpc.Application.DTOs"
                    }
                  },
                  "subfolders": {}
                },
                "Interfaces": {
                  "target_files": {
                    "IProductService.cs": {
                      "source_files": [],
                      "file_type": "interface",
                      "description": "Interface for Product service",
                      "namespace": "ProductGrpc.Application.Interfaces"
                    }
                  },
                  "subfolders": {}
                },
                "Services": {
                  "target_files": {
                    "ProductService.cs": {
                      "source_files": ["HelloASP.Data/Repository/ProductRepository.cs"],
                      "file_type": "service",
                      "description": "Implementation of Product service",
                      "namespace": "ProductGrpc.Application.Services"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          },
          {
            "project_name": "ProductGrpc.Infrastructure",
            "target_structure": {
              "root": {
                "ProductGrpc.Infrastructure.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Infrastructure project file for Product microservice, includes MySQLConnector",
                  "namespace": "ProductGrpc.Infrastructure",
                  "instructions": "Target net8.0; include MySQLConnector for ADO.NET; reference Domain and Application projects"
                }
              },
              "folders": {
                "Data": {
                  "target_files": {
                    "ProductDataAccess.cs": {
                      "source_files": ["HelloASP.Data/Entity/Product.cs"],
                      "file_type": "data_access",
                      "description": "ADO.NET data access for Product with MySQL queries using MySqlConnection, MySqlCommand, MySqlDataReader",
                      "namespace": "ProductGrpc.Infrastructure.Data",
                      "instructions": "Implement async CRUD methods (GetProduct, ListProducts) using MySQLConnection and parameterized MySQL queries"
                    }
                  },
                  "subfolders": {}
                },
                "Repositories": {
                  "target_files": {
                    "ProductRepository.cs": {
                      "source_files": ["HelloASP.Data/Repository/ProductRepository.cs"],
                      "file_type": "repository",
                      "description": "Implementation of Product repository calling ProductDataAccess.cs",
                      "namespace": "ProductGrpc.Infrastructure.Repositories"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          },
          {
            "project_name": "ProductGrpc.Presentation",
            "target_structure": {
              "root": {
                "appsettings.json": {
                  "source_files": ["HelloASP/Web.config"],
                  "file_type": "config",
                  "description": "Configuration for Product gRPC service with MySQL connection string"
                },
                "ProductGrpc.Presentation.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Presentation project file for Product microservice",
                  "namespace": "ProductGrpc.Presentation"
                },
                "Program.cs": {
                  "source_files": [],
                  "file_type": "program_cs_grpc",
                  "description": "Entry point for the Product gRPC service, no EF middleware"
                }
              },
              "folders": {
                "Protos": {
                  "target_files": {
                    "productgrpc.proto": {
                      "source_files": ["HelloASP.Data/Entity/Product.cs", "HelloASP.Data/Repository/ProductRepository.cs"],
                      "file_type": "proto",
                      "description": "gRPC service definition for Product",
                      "namespace": ""
                    }
                  },
                  "subfolders": {}
                },
                "Services": {
                  "target_files": {
                    "ProductGrpcService.cs": {
                      "source_files": ["HelloASP.Data/Repository/ProductRepository.cs"],
                      "file_type": "grpc_service_cs",
                      "description": "gRPC service implementation for Product",
                      "namespace": "ProductGrpc.Presentation.Services"
                    }
                  },
                  "subfolders": {}
                },
                "Properties": {
                  "target_files": {
                    "launchSettings.json": {
                      "source_files": [],
                      "file_type": "config",
                      "description": "Launch settings for the Product gRPC service"
                    }
                  },
                  "subfolders": {}
                }
              }
            }
          }
        ]
      },
      {
        "name": "webUI",
        "projects": [
          {
            "project_name": "WebUI.Presentation",
            "target_structure": {
              "root": {
                "appsettings.json": {
                  "source_files": ["HelloASP/Web.config"],
                  "file_type": "config",
                  "description": "Configuration for WebUI with MySQL connection string if auth_enabled"
                },
                "WebUI.Presentation.csproj": {
                  "source_files": [],
                  "file_type": "csproj_grpc",
                  "description": "Web UI project file"
                },
                "Program.cs": {
                  "source_files": [],
                  "file_type": "program_cs_grpc",
                  "description": "Entry point for the WebUI application, no EF middleware"
                }
              },
              "folders": {
                "Controllers": {
                  "target_files": {
                    "AuthController.cs": {
                      "source_files": [],
                      "file_type": "controller",
                      "description": "Controller for authentication UI",
                      "namespace": "WebUI.Presentation.Controllers"
                    },
                    "CustomerController.cs": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "controller",
                      "description": "Controller for Customer UI",
                      "namespace": "WebUI.Presentation.Controllers"
                    },
                    "HomeController.cs": {
                      "source_files": [],
                      "file_type": "controller",
                      "description": "Controller for home page",
                      "namespace": "WebUI.Presentation.Controllers"
                    },
                    "ProductController.cs": {
                      "source_files": ["HelloASP/Product/ProductList.aspx.cs"],
                      "file_type": "controller",
                      "description": "Controller for Product UI",
                      "namespace": "WebUI.Presentation.Controllers"
                    }
                  },
                  "subfolders": {}
                },
                "Models": {
                  "target_files": {
                    "Customer.cs": {
                      "source_files": ["HelloASP/Customers/Default.aspx.cs"],
                      "file_type": "model",
                      "description": "Customer model for UI",
                      "namespace": "WebUI.Presentation.Models"
                    },
                    "LoginViewModel.cs": {
                      "source_files": [],
                      "file_type": "model",
                      "description": "Model for login view",
                      "namespace": "WebUI.Presentation.Models"
                    },
                    "Product.cs": {
                      "source_files": ["HelloASP.Data/Entity/Product.cs"],
                      "file_type": "model",
                      "description": "Product model for UI",
                      "namespace": "WebUI.Presentation.Models"
                    }
                  },
                  "subfolders": {}
                },
                "Views": {
                  "target_files": {
                    "_ViewImports.cshtml": {
                      "source_files": ["HelloASP/Views/_ViewStart.cshtml"],
                      "file_type": "view",
                      "description": "Razor view imports"
                    },
                    "_ViewStart.cshtml": {
                      "source_files": ["HelloASP/Views/_ViewStart.cshtml"],
                      "file_type": "view",
                      "description": "Razor view startup configuration"
                    }
                  },
                  "subfolders": {
                    "Auth": {
                      "target_files": {
                        "Login.cshtml": {
                          "source_files": [],
                          "file_type": "view",
                          "description": "Login view for authentication",
                          "namespace": ""
                        }
                      },
                      "subfolders": {}
                    },
                    "Customer": {
                      "target_files": {
                        "Index.cshtml": {
                          "source_files": ["HelloASP/Customers/Default.aspx"],
                          "file_type": "view",
                          "description": "Customer list view"
                        }
                      },
                      "subfolders": {}
                    },
                    "Home": {
                      "target_files": {
                        "Index.cshtml": {
                          "source_files": [],
                          "file_type": "view",
                          "description": "Home page view"
                        }
                      },
                      "subfolders": {}
                    },
                    "Product": {
                      "target_files": {
                        "Index.cshtml": {
                          "source_files": ["HelloASP/Product/ProductList.aspx"],
                          "file_type": "view",
                          "description": "Product list view"
                        },
                        "Update.cshtml": {
                          "source_files": [],
                          "file_type": "view",
                          "description": "Product update view"
                        }
                      },
                      "subfolders": {}
                    },
                    "Shared": {
                      "target_files": {
                        "_Layout.cshtml": {
                          "source_files": ["HelloASP/Views/Shared/_Layout.cshtml"],
                          "file_type": "view",
                          "description": "Shared layout view"
                        }
                      },
                      "subfolders": {}
                    }
                  }
                },
                "Properties": {
                  "target_files": {
                    "launchSettings.json": {
                      "source_files": [],
                      "file_type": "config",
                      "description": "Launch settings for the WebUI application"
                    }
                  },
                  "subfolders": {}
                },
                "wwwroot": {
                  "target_files": {},
                  "subfolders": {
                    "content": {
                      "target_files": {
                        "bootstrap-grid.css": {
                          "source_files": [],
                          "file_type": "config",
                          "description": "Bootstrap grid CSS"
                        },
                        "Site.css": {
                          "source_files": ["HelloASP/Content/Site.css"],
                          "file_type": "config",
                          "description": "Site-specific CSS"
                        }
                      },
                      "subfolders": {}
                    },
                    "scripts": {
                      "target_files": {
                        "bootstrap.bundle.js": {
                          "source_files": [],
                          "file_type": "config",
                          "description": "Bootstrap JavaScript bundle"
                        },
                        "WebForms.js": {
                          "source_files": [],
                          "file_type": "config",
                          "description": "WebForms JavaScript"
                        },
                        "WebParts.js": {
                          "source_files": [],
                          "file_type": "config",
                          "description": "WebParts JavaScript"
                        },
                        "WebUIValidation.js": {
                          "source_files": [],
                          "file_type": "config",
                          "description": "WebUI validation JavaScript"
                        }
                      },
                      "subfolders": {}
                    }
                  }
                }
              }
            }
          }
        ]
      }
    ]
  }
  